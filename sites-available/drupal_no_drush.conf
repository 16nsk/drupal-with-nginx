# -*- mode: nginx; mode: flyspell-prog; ispell-local-dictionary: "american" -*-
### Nginx configuration for Drupal. Uses update.php and relies on an
### external process to execute cronjobs.

## The 'default' location.
location / {

    ## Use index.html whenever there's no index.php.
    location = / {
        error_page 404 =200 /index.html;
    }
    
    ## Using a nested location is the 'correct' way to use regexes.

    ## Regular private file serving (i.e. handled by Drupal).
    location ~* /system/files/ {
        try_files $uri /index.php?q=$uri&$args;
        ## For not signaling a 404 in the error log whenever the
        ## system/files directory is accessed add the line below.
        ## Note that the 404 is the intended behavior.
        log_not_found off;
    }

    ## If accessing an image generated by imagecache, serve it directly if
    ## available, if not relay the request to Drupal to (re)generate the
    ## image.
    location ~* /imagecache/ {
        access_log off;
        expires 30d;
        try_files $uri /index.php?q=$uri&$args;
    }

    ## Drupal 7 generated image handling, i.e., imagecache in core. See:
    ## https://drupal.org/node/371374.
    location ~* /files/styles/ {
        access_log off;            
        expires 30d;
        try_files $uri /index.php?q=$uri&$args;
    }
    
    ## Trying to access private files directly returns a 404.
    location ~* /files/private/ {
        internal;
    }
    
    ## All static files will be served directly.
    location ~* ^.+\.(?:css|js|jpg|jpeg|gif|ico|png|html|xml)$ {
        access_log        off;
        expires           30d;
        ## No need to bleed constant updates. Send the all shebang in one
        ## fell swoop.
        tcp_nodelay off;
    }

    ## Keep a tab on the "big" static files.
    location ~* ^.+\.(?:m4a|mp3|mp4|mov|ogg|flv|pdf|ppt[x]*)$ {
        expires 30d;
        ## No need to bleed constant updates. Send the all shebang in one
        ## fell swoop.
        tcp_nodelay off;
    }

    ## Replicate the Apache <FilesMatch> directive of Drupal standard
    ## .htaccess. Disable access to any code files. Return a 404 to curtail
    ## information disclosure. Hide also the text files.
    location ~* ^(?:.+\.(?:htaccess|make|txt|engine|inc|info|install|module|profile|po|sh|.*sql|theme|tpl(?:\.php)?|xtmpl)|code-style\.pl|/Entries.*|/Repository|/Root|/Tag|/Template)$ {
        return 404; 
    }

    ## First we try the URI and relay to /index.php?q=$uri&$args if not found.
    try_files $uri /index.php?q=$uri&$args;
}

########### Security measures ########## 

## Restrict access to the strictly necessary PHP files. Reducing the
## scope for exploits. Handling of PHP code and the Drupal event loop.
location = /index.php {
    fastcgi_pass phpcgi;
    # To use Apache for serving PHP uncomment the line bellow and
    # comment out the above.
    #proxy_pass http://phpapache;
    # Filefield Upload progress
    # http://drupal.org/project/filefield_nginx_progress support
    # through the NgninxUploadProgress modules.
    track_uploads uploads 60s;
}

## Boost stats.
location = /boost_stats.php {
    fastcgi_pass phpcgi;
    # To use Apache for serving PHP uncomment the line bellow and
    # comment out the above.
    #proxy_pass http://phpapache;
}

## XMLRPC. Comment out if not enabled.
location = /xmlrpc.php {
    fastcgi_pass phpcgi;
    # To use Apache for serving PHP uncomment the line bellow and
    # comment out the above.
    #proxy_pass http://phpapache;
}


## Restrict cron access to a specific host.
location = /cron.php {
    allow 127.0.0.1;
    allow 192.168.1.0/24;
    fastcgi_pass phpcgi;
    # To use Apache for serving PHP uncomment the line bellow and
    # comment out the above.
    #proxy_pass http://phpapache;
    error_page 403 =404;
    deny all;
}


## All install, update and related pages are protected via Basic HTTPAuth.
location = /install.php {
    auth_basic "Restricted Access"; # auth realm                          
    auth_basic_user_file .htpasswd-users; # htpasswd file
    fastcgi_pass phpcgi;
    # To use Apache for serving PHP uncomment the line bellow and
    # comment out the above.
    #proxy_pass http://phpapache;
}

location = /update.php {
    auth_basic "Restricted Access"; # auth realm                          
    auth_basic_user_file .htpasswd-users; # htpasswd file
    fastcgi_pass phpcgi;
    # To use Apache for serving PHP uncomment the line bellow and
    # comment out the above.
    #proxy_pass http://phpapache;
}


## Any other attempt to access PHP files returns a 404.
location ~* ^.+\.php$ {
    return 404; 
}
